<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vm="clr-namespace:WinHAB.Core.ViewModels.Widgets;assembly=WinHAB.Core"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:mui="http://firstfloorsoftware.com/ModernUI"
                    mc:Ignorable="d" >
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Themes/Colors.xaml" />
        <ResourceDictionary Source="/Themes/Icons.xaml" />
        <ResourceDictionary Source="WidgetSharedStyles.xaml"/>
        <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/Converters.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="SwitchWidgetTemplate" TargetType="{x:Type Button}">
        <Grid d:DataContext="{d:DesignInstance Type=vm:TextWidgetModel}">
            <Border Name="BackgroundBorder"  Background="{TemplateBinding Background}" 
                    BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"/>
            <Grid Margin="5">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <mui:ModernProgressRing Grid.Row="0" Style="{DynamicResource WhiteProgressIndicatorStyle}" />

                <Grid Name="ValueGrid" Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Path Name="IconPath" Grid.Column="0"
                          Visibility="{Binding Icon, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=inverse}"
                          Data="{Binding Icon, Converter={StaticResource StringToGeometryConverter}}" Fill="{TemplateBinding Foreground}"
                          VerticalAlignment="Center" Width="35" Height="35" Stretch="Uniform" />
                    <Border Name="ValueSeparatorBorder" Width="5" Grid.Column="1" Background="Transparent"/>
                    <TextBlock Name="ValueTextBlock" Grid.Column="2" Text="{Binding Value}" Style="{StaticResource TextWidgetValue}"
                               Visibility="{Binding Value, Converter={StaticResource NullOrEmptyStringToVisibilityConverter}, ConverterParameter=inverse}"
                               VerticalAlignment="Center" HorizontalAlignment="Left"/>
                </Grid>

                <TextBlock Name="TitleTextBlock"  Grid.Row="1" Text="{Binding Title}" Style="{StaticResource TextWidgetTitle}" HorizontalAlignment="Left" VerticalAlignment="Bottom" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger SourceName="IconPath" Property="Visibility" Value="Collapsed">
                <Setter TargetName="ValueSeparatorBorder" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger SourceName="ValueTextBlock" Property="Visibility" Value="Collapsed">
                <Setter TargetName="ValueSeparatorBorder" Property="Visibility" Value="Collapsed"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
   
    <Style x:Key="SwitchWidget" TargetType="Button" BasedOn="{StaticResource WidgetButtonBaseStyle}">
        <Setter Property="Background" Value="{DynamicResource InactiveSwitch}"/>
        <Setter Property="Command" Value="{Binding PostCommand}"/>
        <Setter Property="Template" Value="{StaticResource SwitchWidgetTemplate}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding State}" Value="{x:Static vm:SwitchWidgetState.Active}">
                <Setter Property="Background" Value="{DynamicResource Accent}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding State}" Value="{x:Static vm:SwitchWidgetState.Inactive}">
                <Setter Property="Background" Value="{StaticResource InactiveSwitch}"/>
                <Setter Property="BorderBrush" Value="White"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding State}" Value="{x:Static vm:SwitchWidgetState.Normal}">
                <Setter Property="Background" Value="{DynamicResource Accent}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>