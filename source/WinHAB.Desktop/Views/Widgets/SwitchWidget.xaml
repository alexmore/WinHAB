<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vm="clr-namespace:WinHAB.Core.ViewModels.Widgets;assembly=WinHAB.Core"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:mui="http://firstfloorsoftware.com/ModernUI"
                    mc:Ignorable="d" >
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Themes/Colors.xaml" />
        <ResourceDictionary Source="/Themes/Icons.xaml" />
        <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/Converters.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <Style x:Key="SwitchWidget" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource Accent}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Width" Value="NaN" />
        <Setter Property="Height" Value="NaN" />
        <Setter Property="FontFamily" Value="Segoe UI Semilight" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
        <Setter Property="Command" Value="{Binding PostCommand}"/>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Name="TemplateGrid"  d:DataContext="{d:DesignInstance Type=vm:SwitchWidgetModel}">
                        <Border Name="BackgroundBorder"  Background="{DynamicResource InactiveSwitch}" 
                            BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"/>
                        <Grid Name="ContentGrid" Margin="5">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <mui:ModernProgressRing Style="{DynamicResource WhiteProgressIndicatorStyle}" Grid.Row="0" />

                            <Grid Name="IconGrid" Grid.Row="0" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="{Binding IsProgressIndicatorVisible, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=inverse}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                
                                <Path Name="IconPath"  Data="{Binding Icon, Converter={StaticResource StringToGeometryConverter}, ConverterParameter={StaticResource PowerIcon} }" 
                                  VerticalAlignment="Center" HorizontalAlignment="Center" Width="35" Height="35" Margin="5"
                                  Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" Stretch="Uniform"/>
                                <TextBlock Name="IconValueTextBox" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center"
                                           Text="{Binding Value}" Style="{StaticResource TextWidgetValue}" />

                            </Grid>
                            <TextBlock Name="TitleTextBlock"  Grid.Row="1" Text="{Binding Title}" Style="{StaticResource TextWidgetTitle}" HorizontalAlignment="Left" VerticalAlignment="Bottom" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding State}" Value="{x:Static vm:SwitchWidgetState.Active}" >
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{DynamicResource ActiveSwitch}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding State}" Value="{x:Static vm:SwitchWidgetState.Normal}" >
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{DynamicResource Accent}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding State}" Value="{x:Static vm:SwitchWidgetState.Disabled}" >
                            <Setter TargetName="TemplateGrid" Property="Opacity" Value=".6" />
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="Opacity" Value=".8"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="Opacity" Value=".4" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>