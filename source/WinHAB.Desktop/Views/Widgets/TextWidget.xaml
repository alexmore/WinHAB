<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vm="clr-namespace:WinHAB.Core.ViewModels.Widgets;assembly=WinHAB.Core"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:viewModels="clr-namespace:WinHAB.Core.ViewModels;assembly=WinHAB.Core"
                    mc:Ignorable="d" >
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Themes/Icons.xaml" />
        <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/Converters.xaml" />
        <ResourceDictionary Source="WidgetSharedStyles.xaml"/>
    </ResourceDictionary.MergedDictionaries>
  
    <ControlTemplate x:Key="TextWidgetMediumTemplate" TargetType="{x:Type Button}">
        <Grid d:DataContext="{d:DesignInstance Type=vm:TextWidgetModel}">
            <Border Name="BackgroundBorder"  Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"/>
            <Grid Margin="5">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                
                <Grid Name="ValueGrid" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Path Name="IconPath" Grid.Column="0"
                          Style="{StaticResource ValueIcon}"
                          Data="{Binding Icon, Converter={StaticResource StringToGeometryConverter}}" Fill="{TemplateBinding Foreground}"/>
                    <Border Name="ValueSeparatorBorder" Width="5" Grid.Column="1" Background="Transparent"/>
                    <TextBlock Name="ValueTextBlock" Grid.Column="2" Text="{Binding Value}" Style="{StaticResource WidgetValueText}"/>
                </Grid>
                
                <Grid Name="TitleGrid" Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Name="TitleTextBlock" Grid.Column="0" Text="{Binding Title}" Style="{StaticResource WidgetTitleText}" />
                    <Path Name="LinkPath" Grid.Column="1" Visibility="{Binding IsLink, Converter={StaticResource BooleanToVisibilityConverter}}"
                          Style="{StaticResource ArrowRightIconPath}" Fill="{TemplateBinding Foreground}" />
                </Grid>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger SourceName="IconPath" Property="Visibility" Value="Collapsed">
                <Setter TargetName="ValueSeparatorBorder" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger SourceName="ValueTextBlock" Property="Visibility" Value="Collapsed">
                <Setter TargetName="ValueSeparatorBorder" Property="Visibility" Value="Collapsed"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="TextWidgetWideLargeTemplate" TargetType="{x:Type Button}">
        <Grid d:DataContext="{d:DesignInstance Type=vm:TextWidgetModel}">
            <Border Name="BackgroundBorder"  Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"/>
            <Grid Margin="5">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <Grid Name="ValueGrid" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <TextBlock Name="ValueTextBlock" Text="{Binding Value}" Style="{StaticResource WidgetValueText}" VerticalAlignment="Top" Margin="5"/>
                </Grid>

                <Grid Name="TitleGrid" Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Path Name="TextIconPath" Grid.Column="0"
                          Style="{StaticResource TitleIcon}"
                          Data="{Binding Icon, Converter={StaticResource StringToGeometryConverter}}" Fill="{TemplateBinding Foreground}"/>
                    <TextBlock Name="TitleTextBlock" Grid.Column="1" Text="{Binding Title}" Style="{StaticResource WidgetTitleText}" />
                    <Path Name="LinkPath" Grid.Column="2" Visibility="{Binding IsLink, Converter={StaticResource BooleanToVisibilityConverter}}"
                          Style="{StaticResource ArrowRightIconPath}" Fill="{TemplateBinding Foreground}"/>
                </Grid>
            </Grid>
        </Grid>
    </ControlTemplate>

    <Style x:Key="TextWidget" TargetType="Button" BasedOn="{StaticResource WidgetButtonBaseStyle}" >
        <Setter Property="Command" Value="{Binding NavigateLinkedPageCommand}"/>
        <Setter Property="CommandParameter" Value="{Binding}"/>
        <Setter Property="IsEnabled" Value="{Binding IsLink}"/>
        <Setter Property="Template" Value="{StaticResource TextWidgetMediumTemplate}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Size}" Value="{x:Static viewModels:WidgetSize.Wide}">
                <Setter Property="Template" Value="{StaticResource TextWidgetWideLargeTemplate}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Size}" Value="{x:Static viewModels:WidgetSize.Large}" >
                <Setter Property="Template" Value="{StaticResource TextWidgetWideLargeTemplate}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>