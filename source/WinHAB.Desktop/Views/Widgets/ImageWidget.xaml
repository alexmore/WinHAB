<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:WinHAB.Desktop.Converters"
                    xmlns:controls="clr-namespace:WinHAB.Desktop.Controls"
                    xmlns:loc="clr-namespace:WinHAB.Desktop.Localization"
                    xmlns:vm="clr-namespace:WinHAB.Core.ViewModels.Widgets;assembly=WinHAB.Core"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:mui="http://firstfloorsoftware.com/ModernUI"
                    xmlns:widgets="clr-namespace:WinHAB.Desktop.Views.Widgets"
                    mc:Ignorable="d" >
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Themes/Icons.xaml" />
        <ResourceDictionary Source="WidgetSharedStyles.xaml"/>
        <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/Converters.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="ImageWidgetTemplate" TargetType="ComboBox">
        <Grid d:DataContext="{d:DesignInstance Type=vm:ImageWidgetModel}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Border Name="BackgroundBorder" Grid.Row="0" Grid.RowSpan="2"  Background="{TemplateBinding Background}" BorderThickness="0"/>
            <Path Grid.Row="0" Style="{StaticResource Icon}" Width="40" Height="40" Data="{StaticResource ImageIcon}" Fill="{TemplateBinding Foreground}" />
            
            <Image Name="Image"  Grid.Row="0" Grid.RowSpan="2" Source="{Binding ImageStream, Converter={StaticResource StreamToWidgetImageConverter}}" 
                   Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center" />

            <mui:ModernProgressRing Grid.Row="0" Style="{DynamicResource WidgetProgressIndicatorStyle}"/>

            <Border Name="TitleBackgroundBorder" Grid.Row="1" Background="{TemplateBinding Background}" Opacity=".6" Grid.ColumnSpan="3" />
            <Grid Name="TitleGrid" Grid.Row="1" Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <Path Name="TextIconPath" Grid.Column="0"
                          Style="{StaticResource TitleIcon}"
                          Data="{Binding Icon, Converter={StaticResource StringToGeometryConverter}}" Fill="{TemplateBinding Foreground}"/>
                <TextBlock Name="TitleTextBlock" Grid.Column="1" Text="{Binding Title}" Style="{StaticResource WidgetTitleText}" />
                <Path Name="LinkPath" Grid.Column="2" Fill="{TemplateBinding Foreground}" Style="{StaticResource ArrowDownIconPath}" />
            </Grid>

            <Border Name="FocusBorder" Grid.Row="0" Grid.RowSpan="2"  Background="Transparent" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"/>
            <Border Name="FocusAccentBorder" Grid.Row="0" Grid.RowSpan="2"  Background="Transparent" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource Accent}"
                    Visibility="{Binding ElementName=Image, Path=Source,  Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=inverse}"/>

            <ToggleButton x:Name="ToggleButton" Grid.Row="0" Grid.RowSpan="2" Focusable="false" ClickMode="Press" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                <ToggleButton.Template>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border Background="Transparent"/>
                    </ControlTemplate>
                </ToggleButton.Template>
            </ToggleButton>

            <Popup x:Name="Popup" Grid.Row="0" Grid.RowSpan="2"
                   Placement="Bottom"
                   VerticalOffset="5"
                   IsOpen="{TemplateBinding IsDropDownOpen}"
                   AllowsTransparency="True"
                   Focusable="False"
                   PopupAnimation="Slide">
                <Grid x:Name="DropDown"
                                  SnapsToDevicePixels="True"
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                    <Border x:Name="DropDownBorder" BorderThickness="1" BorderBrush="{DynamicResource Accent}" Background="{DynamicResource WindowBackground}">
                        <ScrollViewer Margin="5" SnapsToDevicePixels="True">
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                        </ScrollViewer>
                    </Border>
                </Grid>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="TitleBackgroundBorder" Property="Opacity" Value="1"/>
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
            </Trigger>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </Trigger>

            <DataTrigger Binding="{Binding IsOffState}" Value="True">
                <Setter Property="Background" Value="{DynamicResource InactiveWidget}"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ImageWidget" TargetType="ComboBox" BasedOn="{StaticResource WidgetComboBoxBaseStyle}">
        <Setter Property="Tag" Value="{Binding TagValue, Mode=OneWayToSource}"/>
        <Setter Property="ItemsSource" Value="{Binding Dropdowns, Mode=TwoWay}"/>
        <Setter Property="SelectedValue" Value="{Binding SelectedDropDownItem}"/>
        <Setter Property="Template" Value="{StaticResource ImageWidgetTemplate}"/>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <ItemContainerTemplate>
                    <StackPanel Orientation="Horizontal" Margin="5">
                        <Path Name="IconPath" Style="{StaticResource DropdownListIcon}"
                              Data="{Binding Icon, Converter={StaticResource StringToGeometryConverter}}" Fill="{Binding Foreground, ElementName=MappingStringTextBlock}"/>
                        <TextBlock Name="MappingStringTextBlock" Text="{Binding Title}" Style="{StaticResource SelectionWidgetDropdownText}" />
                    </StackPanel>
                </ItemContainerTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>
</ResourceDictionary>